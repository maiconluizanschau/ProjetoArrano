@model PorjetoUfsmArrano.Models.Militar

@{
    ViewBag.Title = "Cadastrar Novo Militar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/Mascara.js"></script>
<br /><br /><br /><br /><br /><br /><br />
<section class="content-header">
    <div class="row">
        <div class="col-sm-12 col-md-12" style="padding-right: 0px; padding-left: 0px;">
            <div class="col-xs-9 col-sm-6 col-md-6" style="padding-right: 0px; padding-left: 18px;">
                <h1 class="titulo">
                    Militares

                </h1>
            </div>
            <div class="col-xs-3 col-sm-6 col-md-6 hidden-xs" style="padding-right: 0px; padding-left: 0px;">
                &nbsp;<img style="float: right; width: 100px; margin-top: 25px;" src="@Href("~/Content/imagens/logo.png")" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 col-md-12" style="border-bottom: 1px solid #666666;">
            <ol class="navegacao breadcrumb">
                <li><a href="@Url.Action("../Home")">Início</a></li>
                <li><a href="@Url.Action("index")">Cadastros</a></li>
                <li class="active">Militares</li>
                <li class="active">Novo Militar</li>
            </ol>
        </div>
    </div>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2", onkeyup = "formataTexto(event);"  })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataTexto(event);"  } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger", onkeyup = "formataTexto(event); " })
            </div>
        </div>

      

      
        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefone, htmlAttributes: new { @class = "control-label col-md-2", onkeyup = "formataTelefone(event); " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefone, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataTelefone(event); " } })
                @Html.ValidationMessageFor(model => model.telefone, "", new { @class = "text-danger", onkeyup = "formataTelefone(event); " })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.identificacao, htmlAttributes: new { @class = "control-label col-md-2" , onkeyup = "formataTexto(event);" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.identificacao, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataTexto(event); " } })
                @Html.ValidationMessageFor(model => model.identificacao, "", new { @class = "text-danger" , onkeyup = "formataTexto(event); "})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sobrenome, htmlAttributes: new { @class = "control-label col-md-2", onkeyup = "formataTexto(event); " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sobrenome, new { htmlAttributes = new { @class = "form-control" , onkeyup = "formataTexto(event); "} })
                @Html.ValidationMessageFor(model => model.sobrenome, "", new { @class = "text-danger", onkeyup = "formataTexto(event); " })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nacionalidade, htmlAttributes: new { @class = "control-label col-md-2", onkeyup = "formataTexto(event); " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nacionalidade, new { htmlAttributes = new { @class = "form-control" , onkeyup = "formataTexto(event); "} })
                @Html.ValidationMessageFor(model => model.nacionalidade, "", new { @class = "text-danger" , onkeyup = "formataTexto(event); "})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cpf, htmlAttributes: new { @class = "control-label col-md-2", onkeyup = "formataCPF(event);" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cpf, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataCPF(event);" } })
                @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger", onkeyup = "formataCPF(event);" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.datanascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.datanascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.datanascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cidadenascimento, htmlAttributes: new { @class = "control-label col-md-2" , onkeyup = "formataTexto(event); "})
            <div class="col-md-10">
                @Html.EditorFor(model => model.cidadenascimento, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataTexto(event); " } })
                @Html.ValidationMessageFor(model => model.cidadenascimento, "", new { @class = "text-danger", onkeyup = "formataTexto(event); " })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tiposanguineo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.tiposanguineo, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tiposanguineo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.altura, htmlAttributes: new { @class = "control-label col-md-2", onkeyup = "formataInteiroComMilhar(event);" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.altura, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataInteiroComMilhar(event);" } })
                @Html.ValidationMessageFor(model => model.altura, "", new { @class = "text-danger", onkeyup = "formataInteiroComMilhar(event);" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.peso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.peso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.peso, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.nomemae, htmlAttributes: new { @class = "control-label col-md-2" , onkeyup = "formataTexto(event); "})
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomemae, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataTexto(event); " } })
                @Html.ValidationMessageFor(model => model.nomemae, "", new { @class = "text-danger" , onkeyup = "formataTexto(event); "})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nomepai, htmlAttributes: new { @class = "control-label col-md-2" , onkeyup = "formataTexto(event); "})
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomepai, new { htmlAttributes = new { @class = "form-control", onkeyup = "formataTexto(event); " } })
                @Html.ValidationMessageFor(model => model.nomepai, "", new { @class = "text-danger", onkeyup = "formataTexto(event); " })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipouf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.tipouf, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tipouf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipoestadocivil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.tipoestadocivil, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tipoestadocivil, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.idade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idade, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.tipomilitar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.tipomilitar, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tipomilitar, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (@ViewBag.Master == null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.id_base, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("id_base", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.id_base, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <input type="hidden" name="id_empresa" value="@ViewBag.Master" />
        }
      
       
    

        

        <div class=" form-group">
            @Html.Label("Foto", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="file" id="file" name="file" />
                @Html.HiddenFor(model => model.foto)
                @Html.ValidationMessageFor(model => model.foto)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" class="btn btn-default" />
                <a href="@Url.Action("Index")" class="btn btn-default">Cancelar</a>

            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
            
    
    function Esconde() {
        if (document.getElementsByName('Master')[0].checked) {
            $("#Bases").hide();
            $("#isMaster").show();
        }
        else {
            $("#Bases").show();
            $("#isGERENTE").hide();
        }
    }
        

</script>